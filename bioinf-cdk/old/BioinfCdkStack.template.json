{
 "Description": "Bioinformatics EC2 performance test project ",
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/Resource"
   }
  },
  "VPCasteriskSubnet1SubnetEE53BCBC": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "asterisk"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC/asteriskSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet1/Subnet"
   }
  },
  "VPCasteriskSubnet1RouteTable23B73BA2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC/asteriskSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet1/RouteTable"
   }
  },
  "VPCasteriskSubnet1RouteTableAssociationFD2182F2": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCasteriskSubnet1RouteTable23B73BA2"
    },
    "SubnetId": {
     "Ref": "VPCasteriskSubnet1SubnetEE53BCBC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet1/RouteTableAssociation"
   }
  },
  "VPCasteriskSubnet1DefaultRoute377544B7": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCasteriskSubnet1RouteTable23B73BA2"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet1/DefaultRoute"
   }
  },
  "VPCasteriskSubnet2Subnet7959E1B2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "asterisk"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC/asteriskSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet2/Subnet"
   }
  },
  "VPCasteriskSubnet2RouteTable01067F80": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC/asteriskSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet2/RouteTable"
   }
  },
  "VPCasteriskSubnet2RouteTableAssociation781F3620": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCasteriskSubnet2RouteTable01067F80"
    },
    "SubnetId": {
     "Ref": "VPCasteriskSubnet2Subnet7959E1B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet2/RouteTableAssociation"
   }
  },
  "VPCasteriskSubnet2DefaultRoute9650F4DB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCasteriskSubnet2RouteTable01067F80"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/asteriskSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BioinfCdkStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/VPC/VPCGW"
   }
  },
  "SecurityGroupDD263621": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow SSH (TCP port 22) in",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH Access",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/SecurityGroup/Resource"
   }
  },
  "ec2Role38AB65C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/ec2Role/Resource"
   }
  },
  "ec2RoleDefaultPolicyC400AE24": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ec2RoleDefaultPolicyC400AE24",
    "Roles": [
     {
      "Ref": "ec2Role38AB65C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/ec2Role/DefaultPolicy/Resource"
   }
  },
  "BioinformaticsUbuntuR5ALargeInstanceProfileC1B6C863": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ec2Role38AB65C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/Bioinformatics-Ubuntu-R5A-Large/InstanceProfile"
   }
  },
  "BioinformaticsUbuntuR5ALargeFB54BFF5": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/sda1",
      "Ebs": {
       "VolumeSize": 2048
      }
     },
     {
      "DeviceName": "/dev/sdf",
      "Ebs": {
       "VolumeSize": 8192
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "BioinformaticsUbuntuR5ALargeInstanceProfileC1B6C863"
    },
    "ImageId": {
     "Fn::FindInMap": [
      "BioinformaticsUbuntuR5ALargeAmiMapC455BA26",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "r5a.large",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "SecurityGroupDD263621",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VPCasteriskSubnet1SubnetEE53BCBC"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bioinformatics-Ubuntu-R5A-Large"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\napt-get update -y\napt-get install awscli -y\nmkdir -p $(dirname '/tmp/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh')\naws s3 cp 's3://",
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh' '/tmp/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh'\nset -e\nchmod +x '/tmp/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh'\n'/tmp/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh' --verbose -y"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "ec2RoleDefaultPolicyC400AE24",
    "ec2Role38AB65C0"
   ],
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/Bioinformatics-Ubuntu-R5A-Large/Resource"
   }
  },
  "VolumeA92988D3": {
   "Type": "AWS::EC2::Volume",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "Encrypted": true,
    "MultiAttachEnabled": false,
    "Size": 8192,
    "Tags": [
     {
      "Key": "Name",
      "Value": "/dev/sdf"
     }
    ],
    "VolumeType": "gp2"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/Volume/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRy26DMBD8lt6NmxKpPRMOUQ5VEVRcI2M2yQawkXfdKEL595pHS3va2fF4Zz2O5dtWbp7UjSJdN1GLlRwKVroRgToOoGM5lL0W6cmUWSoyX7WoC18Z4JFbUW49w6eqWlj5lUuIrEbFaM2veAQHw+CCcq8Ybuq+2CxdwmGRSweGRQHaO+T73lnfTwb/iIMhVkYvIxdc2tZ3EzWjh0DVySG384pTzWx4zmS7op8BmbMnbMM12h4VETDJZCyhlzuvG+CdonCcA1nvZvN31fdozmIShhzPYxP4D8+9n3P6o06tqXHM5CGMrUFe6fnr5VXGm/AjV0KMnDeMHch8rt/Y7I1crQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "BioinfCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "BioinformaticsUbuntuR5ALargeAmiMapC455BA26": {
   "us-east-1": {
    "ami": "ami-0044130ca185d0880"
   }
  }
 },
 "Outputs": {
  "Scriptpath": {
   "Value": "/tmp/836c30bcbb924b2b663b8d82f907e45e18ffb32d3f6340e29256801046874b93.sh"
  },
  "IPAddress": {
   "Value": {
    "Fn::GetAtt": [
     "BioinformaticsUbuntuR5ALargeFB54BFF5",
     "PublicIp"
    ]
   }
  },
  "DownloadKeyCommand": {
   "Value": "aws secretsmanager get-secret-value --secret-id ec2-ssh-key/cdk-keypair/private --query SecretString --output text > cdk-key.pem && chmod 400 cdk-key.pem"
  },
  "sshcommand": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "ssh -i cdk-key.pem -o IdentitiesOnly=yes ec2-user@",
      {
       "Fn::GetAtt": [
        "BioinformaticsUbuntuR5ALargeFB54BFF5",
        "PublicIp"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}